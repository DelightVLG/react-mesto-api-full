{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/delightvlg/dev/react-mesto-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImageModal from './ImageModal';\nimport EditProfileModal from './EditProfileModal';\nimport EditAvatarModal from './EditAvatarModal';\nimport AddPlaceModal from './AddPlaceModal';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoToolTip from './InfoTooltip';\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarModalOpen, setIsEditAvatarModalOpen] = useState(false);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false);\n  const [isAddPlaceModalOpen, setIsAddPlaceModalOpen] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isImgOpen: false\n  });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isDataSet, setIsDataSet] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [infoToolTipData, setInfoToolTipData] = useState({\n    title: \"Что-то пошло не так! Попробуйте ещё раз.\",\n    icon: false\n  });\n  const [userData, setUserData] = useState({\n    email: \"\"\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n\n  const tokenCheck = () => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      auth.getContent(token).then(res => {\n        if (res) {\n          setUserData({\n            email: res.data.email\n          });\n          setLoggedIn(true);\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n  React.useEffect(() => {\n    if (loggedIn) {\n      history.push(\"/\");\n    }\n  }, [history, loggedIn]);\n  useEffect(() => {\n    setIsLoading(true);\n    Promise.all([api.getInitialCardList(), api.getUserInfo()]).then(([cardsData, userData]) => {\n      const items = cardsData.map(item => ({\n        _id: item._id,\n        name: item.name,\n        link: item.link,\n        likes: item.likes,\n        owner: item.owner\n      }));\n      setCurrentUser(userData);\n      setCards(items);\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => setIsLoading(false));\n  }, []);\n\n  function handleInfoToolTip() {\n    setIsInfoToolTipOpen(true);\n  }\n\n  const handleLogin = (email, password) => {\n    auth.authorize(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        setUserData({\n          email: email\n        });\n        setLoggedIn(true);\n        history.push('/');\n      }\n    }).catch(err => console.error(err));\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setUserData({\n      email: \"\"\n    });\n    setLoggedIn(false);\n  };\n\n  const handleRegister = (password, email) => {\n    auth.register(password, email).then(() => {\n      setIsDataSet(true);\n      history.push(\"/sign-in\");\n      setInfoToolTipData({\n        icon: true,\n        title: \"Вы успешно зарегистрировались!\"\n      });\n      handleInfoToolTip();\n    }).catch(() => {\n      setIsDataSet(false);\n      setInfoToolTipData({\n        icon: false,\n        title: \"Что-то пошло не так! Попробуйте ещё раз.\"\n      });\n      handleInfoToolTip();\n    });\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarModalOpen(true);\n  };\n\n  const handleUpdateAvatar = avatarData => {\n    api.changeAvatar(avatarData).then(res => {\n      setCurrentUser(res);\n      closeAllModals();\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const handleUpdateUser = userData => {\n    api.saveUserInfo(userData).then(res => {\n      setCurrentUser(res);\n      closeAllModals();\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceModalOpen(true);\n  };\n\n  const handleAddPlaceSubmit = newCard => {\n    api.saveCard(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllModals();\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard({\n      isImgOpen: true,\n      ...card\n    });\n  };\n\n  function handleCardDelete(card) {\n    console.log(card);\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(item => item._id !== card._id);\n      setCards(newCards);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      const newCards = cards.map(item => item._id === card._id ? newCard : item);\n      setCards(newCards);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  const closeAllModals = () => {\n    setIsEditAvatarModalOpen(false);\n    setIsEditProfileModalOpen(false);\n    setIsAddPlaceModalOpen(false);\n    setSelectedCard({\n      isImgOpen: false\n    });\n    setIsInfoToolTipOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page__container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          handleLogout: handleLogout,\n          email: userData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            exact: true,\n            path: \"/\",\n            loggedIn: loggedIn,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            cards: cards,\n            onCardClick: handleCardClick,\n            onCardDelete: handleCardDelete,\n            onCardLike: handleCardLike,\n            onLoading: isLoading,\n            component: Main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegister: handleRegister,\n              isDataSet: isDataSet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          copyright: \"\\xA9 2020 Mesto Russia. \\u0421\\u0435\\u0440\\u0433\\u0435\\u0439 \\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0435\\u0446\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarModal, {\n          isOpen: isEditAvatarModalOpen,\n          onClose: closeAllModals,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfileModal, {\n          isOpen: isEditProfileModalOpen,\n          onClose: closeAllModals,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlaceModal, {\n          isOpen: isAddPlaceModalOpen,\n          onClose: closeAllModals,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageModal, {\n          card: selectedCard,\n          onClose: closeAllModals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          isOpen: isInfoToolTipOpen,\n          onClose: closeAllModals,\n          title: infoToolTipData.title,\n          icon: infoToolTipData.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+LmzzQkzaO6deoFFfUc/xCc3q5A=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/delightvlg/dev/react-mesto-api-full/frontend/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","Redirect","useHistory","ProtectedRoute","api","auth","CurrentUserContext","Header","Main","Footer","ImageModal","EditProfileModal","EditAvatarModal","AddPlaceModal","Login","Register","InfoToolTip","App","isEditAvatarModalOpen","setIsEditAvatarModalOpen","isEditProfileModalOpen","setIsEditProfileModalOpen","isAddPlaceModalOpen","setIsAddPlaceModalOpen","isInfoToolTipOpen","setIsInfoToolTipOpen","selectedCard","setSelectedCard","isImgOpen","currentUser","setCurrentUser","cards","setCards","isDataSet","setIsDataSet","isLoading","setIsLoading","infoToolTipData","setInfoToolTipData","title","icon","userData","setUserData","email","loggedIn","setLoggedIn","history","tokenCheck","token","localStorage","getItem","getContent","then","res","data","catch","err","console","error","push","Promise","all","getInitialCardList","getUserInfo","cardsData","items","map","item","_id","name","link","likes","owner","finally","handleInfoToolTip","handleLogin","password","authorize","setItem","handleLogout","removeItem","handleRegister","register","handleEditAvatarClick","handleUpdateAvatar","avatarData","changeAvatar","closeAllModals","handleEditProfileClick","handleUpdateUser","saveUserInfo","handleAddPlaceClick","handleAddPlaceSubmit","newCard","saveCard","handleCardClick","card","handleCardDelete","log","deleteCard","newCards","filter","handleCardLike","isLiked","some","like","changeLikeCardStatus"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImageModal from './ImageModal';\nimport EditProfileModal from './EditProfileModal';\nimport EditAvatarModal from './EditAvatarModal';\nimport AddPlaceModal from './AddPlaceModal';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoToolTip from './InfoTooltip';\n\nfunction App() {\n  const [isEditAvatarModalOpen, setIsEditAvatarModalOpen] = useState(false);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false);\n  const [isAddPlaceModalOpen, setIsAddPlaceModalOpen] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = useState({ isImgOpen: false });\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isDataSet, setIsDataSet] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [infoToolTipData, setInfoToolTipData] = useState({\n    title: \"Что-то пошло не так! Попробуйте ещё раз.\",\n    icon: false,\n  });\n\n  const [userData, setUserData] = useState({\n    email: \"\",\n  });\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const history = useHistory();\n\n  const tokenCheck = () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      auth\n        .getContent(token)\n        .then((res) => {\n          if (res) {\n            setUserData({ email: res.data.email });\n            setLoggedIn(true);\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      history.push(\"/\");\n    }\n  }, [history, loggedIn]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    Promise.all([\n      api.getInitialCardList(),\n      api.getUserInfo(),\n    ])\n      .then(([cardsData, userData]) => {\n        const items = cardsData.map((item) => ({\n          _id: item._id,\n          name: item.name,\n          link: item.link,\n          likes: item.likes,\n          owner: item.owner,\n        }));\n\n        setCurrentUser(userData);\n        setCards(items);\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  function handleInfoToolTip() {\n    setIsInfoToolTipOpen(true);\n  }\n\n  const handleLogin = (email, password) => {\n    auth\n      .authorize(email, password)\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n          setUserData({email: email});\n          setLoggedIn(true);\n          history.push('/');\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setUserData({ email: \"\" });\n    setLoggedIn(false);\n  };\n\n\n  const handleRegister = (password, email) => {\n    auth\n      .register(password, email)\n      .then(() => {\n        setIsDataSet(true);\n        history.push(\"/sign-in\");\n        setInfoToolTipData({ icon: true, title: \"Вы успешно зарегистрировались!\" });\n        handleInfoToolTip();\n      })\n      .catch(() => {\n        setIsDataSet(false);\n        setInfoToolTipData({\n          icon: false,\n          title: \"Что-то пошло не так! Попробуйте ещё раз.\",\n        });\n        handleInfoToolTip();\n      });\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarModalOpen(true);\n  };\n\n  const handleUpdateAvatar = (avatarData) => {\n    api.changeAvatar(avatarData)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllModals();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const handleUpdateUser = (userData) => {\n    api.saveUserInfo(userData)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllModals();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceModalOpen(true);\n  };\n\n  const handleAddPlaceSubmit = (newCard) => {\n    api\n      .saveCard(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllModals();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard({ isImgOpen: true, ...card });\n  };\n\n  function handleCardDelete(card) {\n    console.log(card);\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((item) => item._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => {\n      console.error(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((like) => like._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((item) => (item._id === card._id ? newCard : item));\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const closeAllModals = () => {\n    setIsEditAvatarModalOpen(false);\n    setIsEditProfileModalOpen(false);\n    setIsAddPlaceModalOpen(false);\n    setSelectedCard({ isImgOpen: false });\n    setIsInfoToolTipOpen(false);\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header\n            handleLogout={handleLogout}\n            email={userData.email}/>\n\n          <Switch>\n\n            <ProtectedRoute\n              exact\n              path=\"/\"\n              loggedIn={loggedIn}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              cards={cards}\n              onCardClick={handleCardClick}\n              onCardDelete={handleCardDelete}\n              onCardLike={handleCardLike}\n              onLoading={isLoading}\n              component={Main}\n            />\n\n            <Route path=\"/sign-in\">\n              <Login handleLogin={handleLogin} />\n            </Route>\n\n            <Route path=\"/sign-up\">\n              <Register handleRegister={handleRegister} isDataSet={isDataSet} />\n            </Route>\n\n            <Route>\n              {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n            </Route>\n\n          </Switch>\n          <Footer copyright=\"© 2020 Mesto Russia. Сергей Компаниец\" />\n\n          <EditAvatarModal\n            isOpen={isEditAvatarModalOpen}\n            onClose={closeAllModals}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <EditProfileModal\n            isOpen={isEditProfileModalOpen}\n            onClose={closeAllModals}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <AddPlaceModal\n            isOpen={isAddPlaceModalOpen}\n            onClose={closeAllModals}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          <ImageModal card={selectedCard} onClose={closeAllModals} />\n\n          <InfoToolTip\n            isOpen={isInfoToolTipOpen}\n            onClose={closeAllModals}\n            title={infoToolTipData.title}\n            icon={infoToolTipData.icon}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}