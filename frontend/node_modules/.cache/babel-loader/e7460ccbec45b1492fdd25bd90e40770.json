{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCardList() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n\n  saveCard(cardData) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData.cardTitle,\n        link: cardData.cardSrc\n      })\n    }).then(this._getResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n\n  dislikeCard(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this.dislikeCard(cardId) : this.likeCard(cardId);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._getResponse(res));\n  }\n\n  saveUserInfo(inputsValues) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputsValues.name,\n        about: inputsValues.about\n      })\n    }).then(this._getResponse);\n  }\n\n  changeAvatar(inputValue) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputValue.avatar\n      })\n    }).then(this._getResponse);\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-16',\n  headers: {\n    authorization: 'c2262ae2-cc7e-47ac-904f-82f5dcb37778',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/delightvlg/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","constructor","config","_url","url","_headers","headers","_getResponse","res","ok","json","Promise","reject","Error","status","getInitialCardList","fetch","then","saveCard","cardData","method","body","JSON","stringify","name","cardTitle","link","cardSrc","deleteCard","cardId","likeCard","dislikeCard","changeLikeCardStatus","isLiked","getUserInfo","saveUserInfo","inputsValues","about","changeAvatar","inputValue","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCardList() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n\n  saveCard(cardData) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardData.cardTitle,\n        link: cardData.cardSrc,\n      }),\n    })\n      .then(this._getResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._getResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n      .then(this._getResponse);\n  }\n\n  dislikeCard(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(this._getResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked\n      ? this.dislikeCard(cardId)\n      : this.likeCard(cardId)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    })\n      .then((res) => this._getResponse(res));\n  }\n\n  saveUserInfo(inputsValues) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputsValues.name,\n        about: inputsValues.about,\n      }),\n    }).then(this._getResponse);\n  }\n\n  changeAvatar(inputValue) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputValue.avatar,\n      }),\n    }).then(this._getResponse);\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-16',\n  headers: {\n    authorization: 'c2262ae2-cc7e-47ac-904f-82f5dcb37778',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}